# -*- coding: utf-8 -*-
"""EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XXaIzqBGHrAjb1ER4miZO2r-oNSrYfsG
"""

import gspread
from google.colab import auth
from oauth2client.client import GoogleCredentials
from google.auth import default
import csv
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from wordcloud import WordCloud

# Authenticate and create a client
auth.authenticate_user()
creds, _ = default()
gc = gspread.authorize(creds)

# Open the Google Sheets file
spreadsheet = gc.open("ChatBot Conversations")

worksheet = spreadsheet.worksheet("ChatBot_Conversations_Categorized")
data = worksheet.get_all_values()

chat_conversation = pd.DataFrame(data[1:], columns=data[0])

chat_conversation = chat_conversation[chat_conversation['Evaluate'] != ''].drop(columns=["STT", "Responses", "Evaluate", "Comment"], axis=1)

# chat_conversation.head(3)

# Open the Google Sheets file
spreadsheet = gc.open("tpp_Data_in_769audio_vn")

worksheet = spreadsheet.worksheet("tpp_Data_in_769audio_vn")
data = worksheet.get_all_values()

products = pd.DataFrame(data[1:], columns=data[0])

# products.head(3)

# Open the Google Sheets file
spreadsheet = gc.open("User Feedback")

worksheet = spreadsheet.worksheet("Feedback")
data = worksheet.get_all_values()

feedback = pd.DataFrame(data[1:], columns=data[0])

# feedback.head(3)

# Removing duplicates
products.drop_duplicates(inplace=True)
feedback.drop_duplicates(inplace=True)
chat_conversation.drop_duplicates(inplace=True)

# Removing unnecessary data
products = products[pd.to_numeric(products['Giá'], errors='coerce').notna()]
products.dropna(subset=['Giá'], inplace=True)

# Check data types and convert if necessary
products['Giá'] = products['Giá'].astype(float)

products = products[products['Giá'] >= 100000]
chat_conversation.dropna(subset=['Real responses'], inplace=True)

import seaborn as sns
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

# Assuming you have already loaded your 'products' DataFrame and it includes a 'Giá' column
sns.histplot(products['Giá'])
plt.title('Distribution of Product Prices')

# Set the x-axis labels to display values scaled down by a factor of one million
ax = plt.gca()  # Get current axis

# Create a function to format the x-axis ticks
def millions_formatter(x, pos):
    return '{:.1f}'.format(x / 1e6)  # Divide the tick by one million and format

ax.xaxis.set_major_formatter(ticker.FuncFormatter(millions_formatter))  # Apply the custom formatter

# Update the x-axis label to indicate the units
plt.xlabel('Price (Million VND)')
plt.ylabel('Quantity')

plt.show()

import seaborn as sns
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

# Assuming you have already loaded your 'products' DataFrame and it includes a 'Giá' column
sns.histplot(products['Giá'])
plt.title('Distribution of Product Prices')

# Set the x-axis labels to display values scaled down by a factor of one million
ax = plt.gca()  # Get current axis

# Create a function to format the x-axis ticks
def millions_formatter(x, pos):
    return '{:.1f}'.format(x / 1e6)  # Divide the tick by one million and format

ax.xaxis.set_major_formatter(ticker.FuncFormatter(millions_formatter))  # Apply the custom formatter

# Set the limits for the x-axis to focus on the range from 0 to 200M
plt.xlim(0, 200 * 1e6)  # Multiply 200 by 1e6 to convert 200 million to the actual unit scale

# Update the x-axis label to indicate the units
plt.xlabel('Price (Million VND)')
plt.ylabel('Quantity')

plt.show()

text = ' '.join(products['Giới thiệu'] + " " + products['Chi tiết'])
wordcloud = WordCloud(width=800, height=400, background_color='white').generate(text)
plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title('Word Cloud for Product Contents')
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

# Count the frequency of each category
category_counts = chat_conversation['Category'].value_counts()

# Plot
plt.figure(figsize=(10, 6))
sns.barplot(x=category_counts.values, y=category_counts.index, palette='viridis')
plt.title('Frequency of Question Categories')
plt.xlabel('Frequency')
plt.ylabel('Category')
plt.show()

responses_text = ' '.join(chat_conversation['Real responses'].values)
wordcloud = WordCloud(background_color='white').generate(responses_text)
plt.figure(figsize=(10, 5))
plt.imshow(wordcloud, interpolation='bilinear')
plt.axis('off')
plt.title('Common Words in Real Responses')
plt.show()